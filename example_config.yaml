# Copyright 2019, Advanced UniByte GmbH.
# Author Marie Lohbeck.
#
# This file is part of Gafaspot.
#
# Gafaspot is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Gafaspot is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Gafaspot.  If not, see <https://www.gnu.org/licenses/>.

# example config

#######################################
#
# general config for gafaspot
#######################################

webservice-address: 127.0.0.1:8080

# max-reservation-duration defines, how long one reservation for an environment
# is allowed to be in days
max-reservation-duration-days: 30
# max-queuing-time defines, how far a reservation's start can be in the future
# in months
max-queuing-time-months: 2


######################################
#
# config concerning database
######################################

# db-path specifies the file path of the SQLITE database file gafaspot will use.
# If database file doesn't yet exist, it will be created with starting gafaspot.
db-path: ./gafaspot.db

# database-ttl-months defines, how long a database entry is usually kept in 
# database, after it is not used anymore. Currently, this ttl applies to table
# users, meaning, a user's table entry gets deleted if he haven't logged in for
# this time, and for table reservations, meaning, a reservation gets deleted,
# when this time has elapsed after the reservation's expiring date.
# Value is given in months.
database-ttl-months: 12

######################################
#
# config concerning Vault
######################################

vault-address: http://127.0.0.1:8200/v1

# approle-roleID and approle-secretID are the credentials, gafaspot uses to
# authenticate against Vault. They are kind of like user name and password.
# You have to enable the approle auth method and create such credentials inside
# Vault.
approle-roleID: someID
approle-secretID: someSecret

# ldap-group-policy is the name of the Vault policy, which is associated to
# legitime users of gafaspot. When Gafaspot uses the LDAP auth method to verify
# its users, Vault requests over LDAP
#       * if the user credentials are valid at all and
#       * in case they are, to which groups the user belongs to.
# Depending on the group, Vault associates preconfigured policies to the user
# and returns the policy names to gafaspot. Based on this policy name, gafaspot
# decides, whether the user is allowed to use gafaspot or not. To make this
# process work, define a Vault policy (it can be empty, only the name is
# important), configure the LDAP auth method in a way that this policy is
# assigned to members of an LDAP group of users meant to use gafaspot and paste
# the policy name here.
ldap-group-policy: gafaspot-user-ldap

environments:

  demo0:
    # show-name is the environments name shown in the web interface. It is
    # allowed to contain blank spaces, upper case letters and special chars
    show-name: DEMO 0
    # description is an environments description, which is shown in the web
    # interface. Consider to explain in detail, which components are inside the
    # environment, which credentials are to expect from the Secret Engines, and
    # how the credentials map to the environments.
    description: this is demo environment 0

    # for each environment exist the secret-engines section listing all Secrets
    # engines you want to associate with the environment. All Secrets Engines
    # must exist and be configured correctly to work together with your
    # environment components. Equally, for each Secrets Engine with the given
    # type, there must exist another Secrets Engine having the same name, but
    # is of type kv (version 1). Gafaspot expects you to enable the Secrets 
    # Engines under following paths inside Vault:
    #       * operate/<environment name>/<secrets engine name>
    #           => Secrets Engine of specified type
    #       * store/<environment name>/<secrets engine name>
    #           => Secrets Engine of type kv (version 1)
    # Their will follow a more concrete example for this
    secret-engines:
    
      # name is the Secrets Engine's name under which you enable it in Vault.
      # chose a descriptive one to be understood by the users, but without
      # white spaces or special characters.
    - name: NetApp
      # type is the Secrets Engine's type, like it is called in Vault
      type: ontap
      # For each Secrets Engine, you have to create and configure one role to
      # be used with Vault. Paste the role name here.
      role: gafaspot
      
    - name: ActiveDirectory
      type: ad
      role: gafaspot
      
    - name: SSH
      type: ssh
      role: gafaspot
    
  demo1:
    show-name: DEMO 1
  
    secret-engines:
    - name: NetApp
      type: ontap
      role: gafaspot
      
    - name: someDatabase
      type: database
      role: gafaspot
      
    - name: otherDatabase
      type: database
      role: gafaspot